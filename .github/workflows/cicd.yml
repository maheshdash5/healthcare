name: Healthcare CICD workflow

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build tool setup Stage
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Application build Stage
      run: |
           mvn clean install

   # - name: Code Coverage Stage
   #   run: |
   #        mvn clean verify sonar:sonar \
   #          -Dsonar.projectKey=awsplugin \
   #          -Dsonar.projectName='awsplugin' \
   #          -Dsonar.host.url=http://hivemet.com:9000 \
   #          -Dsonar.token=${{ secrets.AWSPLUGIN_KEY }}
    - name: Configure AWS Credentials 1
      id: creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::891376975876:user/adminuser
        output-credentials: true
    - name: get caller identity 1
      run: |
        aws sts get-caller-identity
    - name: Configure AWS Credentials 2
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        aws-access-key-id: ${{ steps.creds.outputs.aws-access-key-id }}
        aws-secret-access-key: ${{ steps.creds.outputs.aws-secret-access-key }}
        aws-session-token: ${{ steps.creds.outputs.aws-session-token }}
        role-to-assume: arn:aws:iam::891376975876:user/adminuser

    - name: get caller identity
      run: |
        aws eks list-clusters
      
    - name: Docker Build & Push to ECR
      run: |  
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 891376975876.dkr.ecr.us-east-1.amazonaws.com
            docker build -t cicd/healthcare .
            docker tag cicd/healthcare:latest 891376975876.dkr.ecr.us-east-1.amazonaws.com/cicd/healthcare:latest
            docker push 891376975876.dkr.ecr.us-east-1.amazonaws.com/cicd/healthcare:latest
